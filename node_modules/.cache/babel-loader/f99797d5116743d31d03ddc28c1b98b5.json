{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/codeclan/cards-against-humanity/src/components/Slider.js\",\n    _s = $RefreshSig$();\n\nimport { motion } from \"framer-motion\";\nimport { useRef, useEffect, useState } from \"react\";\nimport './Slider.css';\nimport images from \"./images\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Slider = () => {\n  _s();\n\n  const [width, setWidth] = useState(0);\n  const slider = useRef();\n  const [character, setCharacter] = useState({});\n  const [loaded, setLoaded] = useState(false);\n\n  const getCharacter = async () => {\n    try {\n      const response = await fetch(`https://rickandmortyapi.com/api/character/`);\n      const data = await response.json();\n      await setCharacter(data);\n      await setLoaded(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    setWidth(slider.current.scrollWidth - slider.current.offsetWidth);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Character Name: \", character.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Card Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        ref: slider,\n        className: \"slider\",\n        whileTap: {\n          cursor: \"grabbing\"\n        },\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          drag: \"x\",\n          dragConstraints: {\n            right: 0,\n            left: -width\n          },\n          className: \"inner-slider\",\n          children: images.map(image => {\n            return /*#__PURE__*/_jsxDEV(motion.div, {\n              className: \"item\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: image,\n                alt: \"img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Slider, \"wWBYmiuj1X9XDBD6F1hC2QQeL2s=\");\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["/Users/user/Desktop/codeclan/cards-against-humanity/src/components/Slider.js"],"names":["motion","useRef","useEffect","useState","images","Slider","width","setWidth","slider","character","setCharacter","loaded","setLoaded","getCharacter","response","fetch","data","json","error","console","log","current","scrollWidth","offsetWidth","name","cursor","right","left","map","image"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMK,MAAM,GAAGP,MAAM,EAArB;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMU,YAAY,GAAG,YAAY;AAC7B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAAF,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAMP,YAAY,CAACM,IAAD,CAAlB;AACA,YAAMJ,SAAS,CAAC,IAAD,CAAf;AACH,KALD,CAMA,OAAOM,KAAP,EAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAVD;;AAYAhB,EAAAA,SAAS,CAAC,MAAM;AAChBK,IAAAA,QAAQ,CAACC,MAAM,CAACa,OAAP,CAAeC,WAAf,GAA6Bd,MAAM,CAACa,OAAP,CAAeE,WAA7C,CAAR;AAEC,GAHQ,EAGN,EAHM,CAAT;AAIA,sBACI;AAAA,2BAEA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA;AAAA,uCAAqBd,SAAS,CAACe,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGI,QAAC,MAAD,CAAQ,GAAR;AAAY,QAAA,GAAG,EAAEhB,MAAjB;AAAyB,QAAA,SAAS,EAAC,QAAnC;AAA4C,QAAA,QAAQ,EAAE;AAACiB,UAAAA,MAAM,EAAC;AAAR,SAAtD;AAAA,+BACI,QAAC,MAAD,CAAQ,GAAR;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAuB,UAAA,eAAe,EAAE;AAACC,YAAAA,KAAK,EAAC,CAAP;AAAUC,YAAAA,IAAI,EAAE,CAACrB;AAAjB,WAAxC;AAAiE,UAAA,SAAS,EAAC,cAA3E;AAAA,oBACCF,MAAM,CAACwB,GAAP,CAAWC,KAAK,IAAG;AAChB,gCACG,QAAC,MAAD,CAAQ,GAAR;AAAY,cAAA,SAAS,EAAC,MAAtB;AAAA,qCACI;AAAK,gBAAA,GAAG,EAAEA,KAAV;AAAiB,gBAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADH;AAKH,WANA;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA,mBADJ;AAsBH,CA5CD;;GAAMxB,M;;KAAAA,M;AA6CN,eAAeA,MAAf","sourcesContent":["import { motion } from \"framer-motion\";\nimport { useRef, useEffect, useState } from \"react\";\nimport './Slider.css';\nimport images from \"./images\";\nconst Slider = () => {\n    const [width, setWidth] = useState(0);\n    const slider = useRef();\n    const [character, setCharacter] = useState({});\n    const [loaded, setLoaded] = useState(false);\n\n    const getCharacter = async () => {\n        try {\n            const response = await fetch(`https://rickandmortyapi.com/api/character/`)\n            const data = await response.json();\n            await setCharacter(data);\n            await setLoaded(true);\n        }\n        catch (error) {\n            console.log(error)\n        }\n    };\n\n    useEffect(() => {\n    setWidth(slider.current.scrollWidth - slider.current.offsetWidth);\n   \n    }, [])\n    return (\n        <>\n    \n        <div className=\"container\">\n        <h3>Character Name: {character.name}</h3>\n        <h2> Card Options</h2>\n            <motion.div ref={slider} className=\"slider\" whileTap={{cursor:\"grabbing\"}}>\n                <motion.div  drag=\"x\"  dragConstraints={{right:0, left: -width}} className=\"inner-slider\">\n                {images.map(image=> {\n                    return(\n                       <motion.div className=\"item\"> \n                           <img src={image} alt=\"img\"/>\n                           </motion.div> \n                    );\n                })}\n                </motion.div>\n\n            </motion.div>\n\n        </div>\n        </>\n    );\n}\nexport default Slider;"]},"metadata":{},"sourceType":"module"}